name: Release
run-name: "Release (branch: ${{ github.ref_name }}; version: ${{ inputs.version }})"

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true

permissions:
  contents: write  # To be able to publish the release
  pull-requests: write

jobs:

  release:
    runs-on: ubuntu-22.04
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
      pull-requests: write
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - run: |
          git config --global --add safe.directory "$(pwd)"
          git config --global user.name "Salt Project Packaging"
          git config --global user.email saltproject-packaging@vmware.com
          git config --global user.signingkey 64CBBC8173D76B3F
          git config --global commit.gpgsign true

      - name: Setup GnuPG
        env:
          SIGNING_GPG_KEY: ${{ secrets.SIGNING_GPG_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHASE }}
        run: |
          export GPG_TTY=$(tty)
          sudo install -d -m 0700 -o "$(id -u)" -g "$(id -g)" /run/gpg
          export GNUPGHOME="$(mktemp -d -p /run/gpg)"
          echo "GNUPGHOME=${GNUPGHOME}" >> "$GITHUB_ENV"
          cat <<EOF > "${GNUPGHOME}/gpg.conf"
          batch
          no-tty
          pinentry-mode loopback
          passphrase-file ${GNUPGHOME}/passphrase
          EOF
          echo "${SIGNING_PASSPHRASE}" > "${GNUPGHOME}/passphrase"
          echo "${SIGNING_GPG_KEY}" | gpg --import -

      - name: Commit release changes
        run: |
          openssl rand -hex 12 > meh
          git add meh
          git commit -m "Release v${{ inputs.version }}"

      - name: Push tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag v${{ inputs.version }}
          git push origin v${{ inputs.version }}

      - name: Publish Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release edit v${{ inputs.version }}  --draft=false
